
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7A6EFCB1F3C607F81AFE48BFBC9700E4'
    
_lr_action_items = {'RETURN':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,14,-5,-8,-76,-19,-21,-22,-24,-20,14,-18,-17,-4,-25,14,-23,-15,-16,-6,14,14,-14,-40,-39,14,-26,-7,-38,-27,-28,-29,14,14,14,14,-30,-41,-31,-32,-35,-36,-37,-78,14,14,-33,-34,]),'WHILE':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,18,-5,-8,-76,-19,-21,-22,-24,-20,18,-18,-17,-4,-25,18,-23,-15,-16,-6,18,18,-14,-40,-39,18,-26,-7,-38,-27,-28,-29,18,18,18,18,-30,-41,-31,-32,-35,-36,-37,-78,18,18,-33,-34,]),'PRINT':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,17,-5,-8,-76,-19,-21,-22,-24,-20,17,-18,-17,-4,-25,17,-23,-15,-16,-6,17,17,-14,-40,-39,17,-26,-7,-38,-27,-28,-29,17,17,17,17,-30,-41,-31,-32,-35,-36,-37,-78,17,17,-33,-34,]),'NEQ':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,79,-47,79,79,79,79,-49,-48,79,79,-63,None,-56,79,None,-62,-52,-54,-53,-55,79,None,None,None,None,79,79,79,79,-50,-51,]),'LE':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,65,-47,65,65,65,65,-49,-48,65,65,-63,None,-56,65,None,-62,-52,-54,-53,-55,65,None,None,None,None,65,65,65,65,-50,-51,]),'%':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,66,-47,66,66,66,66,-49,-48,66,66,66,66,-56,66,66,66,66,-54,66,-55,66,66,66,66,66,66,66,66,66,-50,-51,]),'&':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,67,-47,67,67,67,67,-49,-48,67,67,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,67,-64,-66,-69,-65,67,67,67,67,-50,-51,]),')':([21,26,31,34,46,51,53,54,56,84,87,88,89,93,94,95,96,98,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,132,136,137,142,148,],[-46,-45,-43,-44,-47,-73,95,96,-71,-80,130,131,-42,133,134,-49,-48,-70,136,137,-60,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,-61,-64,-66,-69,-65,-57,-59,-79,141,-82,-72,-50,-51,-83,-81,]),'(':([0,2,3,4,6,7,8,9,11,12,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,32,33,35,36,38,40,44,45,46,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,91,92,97,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,22,-5,-8,-76,22,-19,48,22,52,-21,-22,22,-24,-20,22,-18,-17,-4,-25,56,22,-23,-15,-16,-6,84,84,56,22,22,22,22,22,22,-14,-40,-39,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-26,22,22,22,-7,22,-38,-27,22,-28,22,-29,22,22,22,22,-30,-41,-31,-32,-35,-36,-37,-78,22,22,-33,-34,]),'+':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,70,-47,70,70,70,70,-49,-48,70,70,70,70,-56,70,70,70,-52,-54,-53,-55,70,70,70,70,70,70,70,70,70,-50,-51,]),'*':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,71,-47,71,71,71,71,-49,-48,71,71,71,71,-56,71,71,71,71,-54,71,-55,71,71,71,71,71,71,71,71,71,-50,-51,]),'-':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,72,-47,72,72,72,72,-49,-48,72,72,72,72,-56,72,72,72,-52,-54,-53,-55,72,72,72,72,72,72,72,72,72,-50,-51,]),',':([21,26,31,34,42,43,46,49,51,95,96,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,129,132,136,137,142,148,],[-46,-45,-43,-44,-10,83,-47,91,-73,-49,-48,91,-60,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,-61,-64,-66,-69,-65,-57,-59,-9,140,-82,-11,-72,-50,-51,-83,-81,]),'/':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,73,-47,73,73,73,73,-49,-48,73,73,73,73,-56,73,73,73,73,-54,73,-55,73,73,73,73,73,73,73,73,73,-50,-51,]),'ID':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,17,19,20,22,23,24,25,27,28,29,30,33,35,36,38,40,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,90,91,92,97,101,104,128,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,32,-5,44,-8,-76,45,46,-19,46,-21,-22,46,-24,-20,32,-18,-17,-4,-25,32,-23,-15,-16,-6,46,46,32,46,32,46,-14,-40,-39,32,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-26,46,46,46,-7,124,46,-38,-27,46,-28,46,-29,124,142,32,32,32,32,-30,-41,-31,-32,-35,-36,-37,-78,32,32,-33,-34,]),'INTEGER':([0,2,3,4,6,7,8,9,11,12,14,15,17,19,20,22,23,24,25,27,28,29,30,33,35,36,38,40,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,91,92,97,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,31,-5,-8,-76,31,-19,31,-21,-22,31,-24,-20,31,-18,-17,-4,-25,31,-23,-15,-16,-6,31,31,31,31,31,31,-14,-40,-39,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-26,31,31,31,-7,31,-38,-27,31,-28,31,-29,31,31,31,31,-30,-41,-31,-32,-35,-36,-37,-78,31,31,-33,-34,]),';':([5,21,26,31,32,34,37,39,41,42,43,46,47,49,50,51,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,129,132,135,136,137,],[11,-46,-45,-43,-47,-44,60,61,78,-10,82,-47,86,90,92,-73,-42,-49,-48,138,-60,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,-61,-64,-66,-69,-65,-57,-59,-9,-11,-72,147,-50,-51,]),'^':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,81,-47,81,81,81,81,-49,-48,81,81,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,81,-64,-66,-69,-65,81,-59,81,81,-50,-51,]),'=':([32,44,124,],[58,85,85,]),'<':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,68,-47,68,68,68,68,-49,-48,68,68,-63,None,-56,68,None,-62,-52,-54,-53,-55,68,None,None,None,None,68,68,68,68,-50,-51,]),'$end':([0,1,2,3,4,6,7,8,9,11,12,15,19,20,23,24,27,28,29,30,33,35,36,38,59,60,61,78,82,86,90,92,101,138,139,143,144,145,146,147,149,152,153,],[-3,0,-1,-75,-2,-74,-77,-13,-5,-8,-76,-19,-21,-22,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-14,-40,-39,-26,-7,-38,-27,-28,-29,-30,-41,-31,-32,-35,-36,-37,-78,-33,-34,]),'SHR':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,64,-47,64,64,64,64,-49,-48,64,64,-63,64,-56,64,64,-62,-52,-54,-53,-55,64,64,64,64,64,64,64,64,64,-50,-51,]),'REPEAT':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,25,-5,-8,-76,-19,-21,-22,-24,-20,25,-18,-17,-4,-25,25,-23,-15,-16,-6,25,25,-14,-40,-39,25,-26,-7,-38,-27,-28,-29,25,25,25,25,-30,-41,-31,-32,-35,-36,-37,-78,25,25,-33,-34,]),'STRING':([0,2,3,4,6,7,8,9,11,12,14,15,17,19,20,22,23,24,25,27,28,29,30,33,35,36,38,40,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,91,92,97,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,26,-5,-8,-76,26,-19,26,-21,-22,26,-24,-20,26,-18,-17,-4,-25,26,-23,-15,-16,-6,26,26,26,26,26,26,-14,-40,-39,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,26,26,26,-7,26,-38,-27,26,-28,26,-29,26,26,26,26,-30,-41,-31,-32,-35,-36,-37,-78,26,26,-33,-34,]),'ELSE':([15,19,20,23,24,27,28,30,35,38,60,61,78,86,90,92,101,138,139,143,144,145,146,147,152,153,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-16,-40,-39,-26,-38,-27,-28,-29,-30,-41,150,151,-35,-36,-37,-33,-34,]),'GE':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,77,-47,77,77,77,77,-49,-48,77,77,-63,None,-56,77,None,-62,-52,-54,-53,-55,77,None,None,None,None,77,77,77,77,-50,-51,]),'EQ':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,75,-47,75,75,75,75,-49,-48,75,75,-63,None,-56,75,None,-62,-52,-54,-53,-55,75,None,None,None,None,75,75,75,75,-50,-51,]),'UNTIL':([15,19,20,23,24,27,28,30,35,36,38,55,59,60,61,78,86,90,92,101,138,139,143,144,145,146,147,152,153,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-15,-16,97,-14,-40,-39,-26,-38,-27,-28,-29,-30,-41,-31,-32,-35,-36,-37,-33,-34,]),'IF':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,16,-5,-8,-76,-19,-21,-22,-24,-20,16,-18,-17,-4,-25,16,-23,-15,-16,-6,16,16,-14,-40,-39,16,-26,-7,-38,-27,-28,-29,16,16,16,16,-30,-41,-31,-32,-35,-36,-37,-78,16,16,-33,-34,]),'AND':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,63,-47,63,63,63,63,-49,-48,63,-60,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,63,-64,-66,-69,-65,-57,-59,63,63,-50,-51,]),':':([32,],[57,]),'SHL':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,69,-47,69,69,69,69,-49,-48,69,69,-63,69,-56,69,69,-62,-52,-54,-53,-55,69,69,69,69,69,69,69,69,69,-50,-51,]),'TYPE':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,27,28,29,30,33,35,36,38,40,59,60,61,62,78,82,84,86,90,92,101,138,139,140,143,144,145,146,147,149,152,153,],[-3,-6,10,-2,13,-77,-13,-5,-8,-76,-19,-21,-22,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-6,-14,-40,-39,104,-26,-7,128,-38,-27,-28,-29,-30,-41,128,-31,-32,-35,-36,-37,-78,-33,-34,]),'FLOAT':([0,2,3,4,6,7,8,9,11,12,14,15,17,19,20,22,23,24,25,27,28,29,30,33,35,36,38,40,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,90,91,92,97,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,34,-5,-8,-76,34,-19,34,-21,-22,34,-24,-20,34,-18,-17,-4,-25,34,-23,-15,-16,-6,34,34,34,34,34,34,-14,-40,-39,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,34,34,34,-7,34,-38,-27,34,-28,34,-29,34,34,34,34,-30,-41,-31,-32,-35,-36,-37,-78,34,34,-33,-34,]),'|':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,80,-47,80,80,80,80,-49,-48,80,80,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,80,-64,-66,-69,-65,-57,-59,80,80,-50,-51,]),'BREAK':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,37,-5,-8,-76,-19,-21,-22,-24,-20,37,-18,-17,-4,-25,37,-23,-15,-16,-6,37,37,-14,-40,-39,37,-26,-7,-38,-27,-28,-29,37,37,37,37,-30,-41,-31,-32,-35,-36,-37,-78,37,37,-33,-34,]),'CONTINUE':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,39,-5,-8,-76,-19,-21,-22,-24,-20,39,-18,-17,-4,-25,39,-23,-15,-16,-6,39,39,-14,-40,-39,39,-26,-7,-38,-27,-28,-29,39,39,39,39,-30,-41,-31,-32,-35,-36,-37,-78,39,39,-33,-34,]),'error':([0,2,3,4,6,7,8,9,11,12,15,17,19,20,22,23,24,27,28,29,30,33,35,36,38,40,48,52,56,59,60,61,62,78,82,86,90,92,101,138,139,143,144,145,146,147,149,152,153,],[-3,-6,5,-2,-74,-77,-13,-5,-8,-76,-19,50,-21,-22,53,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-6,88,94,100,-14,-40,-39,5,-26,-7,-38,-27,-28,-29,-30,-41,-31,-32,-35,-36,-37,-78,-33,-34,]),'{':([0,2,3,4,6,7,8,9,11,12,15,19,20,23,24,25,27,28,29,30,33,35,36,38,40,55,57,59,60,61,62,78,82,86,90,92,101,130,131,133,134,138,139,141,143,144,145,146,147,149,150,151,152,153,],[-3,-6,-75,-2,-74,-77,40,-5,-8,-76,-19,-21,-22,-24,-20,40,-18,-17,-4,-25,40,-23,-15,-16,-6,40,40,-14,-40,-39,40,-26,-7,-38,-27,-28,-29,40,40,40,40,-30,-41,40,-31,-32,-35,-36,-37,-78,40,40,-33,-34,]),'>':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,76,-47,76,76,76,76,-49,-48,76,76,-63,None,-56,76,None,-62,-52,-54,-53,-55,76,None,None,None,None,76,76,76,76,-50,-51,]),'}':([9,11,15,19,20,23,24,27,28,30,33,35,36,38,40,59,60,61,62,78,82,86,90,92,101,103,138,139,143,144,145,146,147,152,153,],[-5,-8,-19,-21,-22,-24,-20,-18,-17,-25,-12,-23,-15,-16,-6,-14,-40,-39,-13,-26,-7,-38,-27,-28,-29,139,-30,-41,-31,-32,-35,-36,-37,-33,-34,]),'OR':([21,26,31,32,34,41,46,47,51,54,89,95,96,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,136,137,],[-46,-45,-43,-47,-44,74,-47,74,74,74,74,-49,-48,74,-60,-63,-68,-56,-58,-67,-62,-52,-54,-53,-55,-61,-64,-66,-69,-65,-57,-59,74,74,-50,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction':([8,25,33,55,57,62,130,131,133,134,150,151,],[36,36,59,59,101,36,143,144,145,146,152,153,]),'expr_list':([17,56,],[49,98,]),'choice_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'arg':([84,140,],[127,148,]),'repeat_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'return_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'const':([8,14,17,22,25,33,48,52,55,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,85,91,97,130,131,133,134,150,151,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'continue_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'while_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'init':([10,83,104,],[42,123,42,]),'program':([0,],[1,]),'args_list_or_empty':([84,],[126,]),'elements':([0,],[2,]),'assignment':([8,25,33,55,57,62,130,131,133,134,150,151,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'fundefs':([3,],[6,]),'labeled_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'instructions_opt':([8,62,],[29,103,]),'compound_instr':([8,25,33,55,57,62,130,131,133,134,141,150,151,],[30,30,30,30,30,30,30,30,30,30,149,30,30,]),'inits':([10,104,],[43,43,]),'declaration':([3,62,],[9,9,]),'args_list':([84,],[125,]),'condition':([48,52,97,],[87,93,135,]),'instructions':([8,25,62,],[33,55,33,]),'expr_list_or_empty':([56,],[99,]),'break_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'declarations':([2,40,],[3,62,]),'fundefs_opt':([3,],[8,]),'fundef':([3,6,],[7,12,]),'element':([2,],[4,]),'print_instr':([8,25,33,55,57,62,130,131,133,134,150,151,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'expression':([8,14,17,22,25,33,48,52,55,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,85,91,97,130,131,133,134,150,151,],[41,47,51,54,41,41,89,89,41,51,41,102,41,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,129,132,89,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> elements','program',1,'p_program','Cparser.py',42),
  ('elements -> elements element','elements',2,'p_elements','Cparser.py',48),
  ('elements -> <empty>','elements',0,'p_elements','Cparser.py',49),
  ('element -> declarations fundefs_opt instructions_opt','element',3,'p_element','Cparser.py',58),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',64),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',65),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',74),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',75),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',81),
  ('inits -> init','inits',1,'p_inits','Cparser.py',82),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',92),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',97),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',98),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',105),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',106),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',121),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',122),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',123),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',124),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',125),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',129),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',130),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',135),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',140),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',144),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',145),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr_else','Cparser.py',150),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr_else','Cparser.py',151),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',156),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',157),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',162),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',167),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',172),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',177),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',182),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',187),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',193),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',194),
  ('const -> STRING','const',1,'p_const','Cparser.py',195),
  ('expression -> const','expression',1,'p_const_expression','Cparser.py',200),
  ('expression -> ID','expression',1,'p_const_expression','Cparser.py',201),
  ('expression -> ( expression )','expression',3,'p_pare_expression','Cparser.py',206),
  ('expression -> ( error )','expression',3,'p_pare_expression','Cparser.py',207),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_id_pare_expression','Cparser.py',212),
  ('expression -> ID ( error )','expression',4,'p_id_pare_expression','Cparser.py',213),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',218),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',219),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',220),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',221),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',222),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',223),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',224),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',225),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',226),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',227),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',228),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',229),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',230),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',231),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',232),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',233),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',234),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',235),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',240),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',241),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',246),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',247),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',257),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',258),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',265),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',266),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',276),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',282),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',283),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',287),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',288),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',297),
]
